services:
  prometheus:
    image: docker.io/prom/prometheus:v3.4.0
    networks:
      - pgload-network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prom-data:/prometheus

  grafana:
    image: docker.io/grafana/grafana:12.0.1
    ports:
      - "3000:3000"
    networks:
      - pgload-network
    volumes:
      - ./provisioning:/etc/grafana/provisioning
      - ./dashboards:/var/lib/grafana/dashboards

  pgload:
    image: pgload:0.1.0
    build:
      context: ../pgload
    networks:
      - pgload-network
    environment:
      - PGLOAD_MODE=replication
      - PGLOAD_NODES_DSN=
        postgresql://dba:sql@localhost:5432/ecommerce
        postgresql://dba:sql@localhost:5433/ecommerce
      - PGLOAD_HEALTH_CHECK_TIMEOUT=240
      - PGLOAD_WRITE_DSN=postgresql://dba:sql@localhost:5432/ecommerce
      - PGLOAD_READ_DSN=postgresql://dba:sql@localhost:5433/ecommerce
      - PGLOAD_SCALE=8
      - PGLOAD_CLIENTS=32

volumes:
  prom-data:

networks:
  pgload-network:
    driver: bridge